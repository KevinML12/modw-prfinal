const e=location.pathname.split("/").slice(0,-1).join("/"),u=[e+"/_app/immutable/entry/app.JlQKl896.js",e+"/_app/immutable/nodes/0.DIbzmxqG.js",e+"/_app/immutable/assets/0.DZV3lkMF.css",e+"/_app/immutable/nodes/1.z2FS0CzE.js",e+"/_app/immutable/nodes/2.nTWaHxys.js",e+"/_app/immutable/nodes/3.hCZTis0F.js",e+"/_app/immutable/nodes/4.cOXb5Aff.js",e+"/_app/immutable/chunks/A-BvWNr1.js",e+"/_app/immutable/chunks/B9uhCJpS.js",e+"/_app/immutable/chunks/C6npqHAV.js",e+"/_app/immutable/chunks/CWuBUEw-.js",e+"/_app/immutable/chunks/DF0AeUBT.js",e+"/_app/immutable/chunks/IHki7fMi.js",e+"/_app/immutable/chunks/Lu49ep7q.js",e+"/_app/immutable/entry/start.CtXAeyqS.js"],l=[e+"/icons/android-chrome-192x192.png",e+"/icons/android-chrome-512x512.png",e+"/icons/apple-touch-icon.png",e+"/icons/favicon-16x16.png",e+"/icons/favicon-32x32.png",e+"/icons/favicon.ico",e+"/manifest.json"],r="1761082827430",i=`cache-${r}`,p=[...u,...l];self.addEventListener("install",s=>{s.waitUntil(caches.open(i).then(t=>t.addAll(p)).then(()=>{self.skipWaiting()}))});self.addEventListener("activate",s=>{s.waitUntil(caches.keys().then(async t=>{for(const c of t)c!==i&&await caches.delete(c);self.clients.claim(),console.log(`Service Worker v${r} activated.`)}))});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;const t=new URL(s.request.url);if(t.pathname.startsWith("/@vite")||t.pathname.startsWith("/@fs"))return;if(p.includes(t.pathname)||["/icons/","/logos/","/images/"].some(n=>t.pathname.startsWith(n))||[".png",".jpg",".jpeg",".svg",".gif",".webp",".ico",".woff2",".woff"].some(n=>t.pathname.endsWith(n))){s.respondWith(caches.open(i).then(async n=>{const a=await n.match(s.request);if(a)return a;try{const o=await fetch(s.request);return o.ok&&n.put(s.request,o.clone()),o}catch(o){return console.error(`Fetch failed for asset ${s.request.url}:`,o),new Response("Asset not found",{status:404})}}));return}s.respondWith(caches.open(i).then(async n=>{try{const a=await fetch(s.request);return a.ok&&n.put(s.request,a.clone()),a}catch(a){console.log(`Network failed for ${s.request.url}, trying cache...`);const o=await n.match(s.request);return o||(console.error(`Fetch failed (offline and not in cache) for ${s.request.url}:`,a),new Response("Network error trying to fetch resource.",{status:408,headers:{"Content-Type":"text/plain"}}))}}))});
