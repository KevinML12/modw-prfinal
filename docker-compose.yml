# docker-compose.yml

services:

  # --- Servicio de Ollama (IA Embeddings) ---
  ollama:
    container_name: phoenix_ollama
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - fenix-net

  # --- Servicio del Backend (Go + Gin) ---
  backend:
    container_name: phoenix_backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      SUPABASE_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      GIN_MODE: debug
      MEILI_HOST: http://meilisearch:7700
      MEILI_MASTER_KEY: unaclavesupersecreta123
      OLLAMA_URL: http://ollama:11434
    depends_on:
      - meilisearch
      - ollama
    restart: unless-stopped
    networks:
      - fenix-net

  # --- Servicio del Frontend (SvelteKit) ---
  frontend:
    container_name: phoenix_frontend
    image: mcr.microsoft.com/playwright:focal
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - moda-organica_node_modules:/app/node_modules
    working_dir: /app
    environment:
      VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
      VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
      VITE_API_URL: http://localhost:8080
      VITE_GOOGLE_MAPS_API_KEY: ${VITE_GOOGLE_MAPS_API_KEY}
    command: bash -c "pnpm install && pnpm playwright install && pnpm run dev --host"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - fenix-net

  # --- Servicio de Búsqueda (MeiliSearch) ---
  meilisearch:
    container_name: phoenix_meilisearch
    image: getmeili/meilisearch:v1.3
    ports:
      - "7700:7700"
    environment:
      - MEILI_MASTER_KEY=unaclavesupersecreta123
      - MEILI_ENV=development
    volumes:
      - meili_data:/meili_data
    restart: unless-stopped
    networks:
      - fenix-net

  # --- Servicio de Playwright para E2E Tests ---
  playwright:
    container_name: phoenix_playwright
    image: mcr.microsoft.com/playwright:v1.40.0-focal
    profiles:
      - test
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - playwright-report:/app/playwright-report
      - playwright-results:/app/test-results
    working_dir: /app
    environment:
      BASE_URL: http://frontend:5173
      API_URL: http://backend:8080
      NODE_ENV: test
      PLAYWRIGHT_HTML_REPORT: ./playwright-report
      PLAYWRIGHT_JSON_REPORT: ./test-results/results.json
    command: sleep infinity
    networks:
      - fenix-net
    healthcheck:
      test: ["CMD", "node", "-v"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

# Definición de las redes personalizadas
networks:
  fenix-net:
    driver: bridge

# Definición de los volúmenes nombrados
volumes:
  moda-organica_node_modules:
  ollama_data:
  meili_data:
    driver: local
  playwright-report:
    driver: local
  playwright-results:
    driver: local